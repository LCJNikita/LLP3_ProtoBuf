/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include "nanopb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Field_value {
    bool has_str_val;
    char str_val[64];
    bool has_int_val;
    int64_t int_val;
    bool has_bool_val;
    int64_t bool_val;
    bool has_real_val;
    double real_val;
} Field_value;

typedef struct _Field {
    uint32_t type;
    char name[64];
    Field_value val;
} Field;

typedef struct _Entity {
    pb_size_t fields_count;
    Field fields[20];
    pb_size_t rel_count;
    uint64_t rel[20];
} Entity;

typedef struct _Condition {
    uint32_t is_id;
    uint64_t id;
    uint32_t type;
    uint32_t op;
    char field_name[64];
    Field_value val;
} Condition;

typedef struct _Filter {
    uint32_t negative;
    pb_size_t conditions_count;
    Condition conditions[20];
} Filter;

typedef struct _List_level {
    pb_size_t filters_count;
    Filter filters[20];
} List_level;

typedef struct _View {
    uint32_t op;
    pb_size_t tree_count;
    List_level tree[20];
    bool has_entity;
    Entity entity;
} View;

typedef struct _Response {
    uint32_t is_last;
    char answer[64];
} Response;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Field_value_init_default                 {false, "", false, 0, false, 0, false, 0}
#define Field_init_default                       {0, "", Field_value_init_default}
#define Entity_init_default                      {0, {Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default, Field_init_default}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define Condition_init_default                   {0, 0, 0, 0, "", Field_value_init_default}
#define Filter_init_default                      {0, 0, {Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default, Condition_init_default}}
#define List_level_init_default                  {0, {Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default, Filter_init_default}}
#define View_init_default                        {0, 0, {List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default, List_level_init_default}, false, Entity_init_default}
#define Response_init_default                    {0, ""}
#define Field_value_init_zero                    {false, "", false, 0, false, 0, false, 0}
#define Field_init_zero                          {0, "", Field_value_init_zero}
#define Entity_init_zero                         {0, {Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero, Field_init_zero}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define Condition_init_zero                      {0, 0, 0, 0, "", Field_value_init_zero}
#define Filter_init_zero                         {0, 0, {Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero, Condition_init_zero}}
#define List_level_init_zero                     {0, {Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero, Filter_init_zero}}
#define View_init_zero                           {0, 0, {List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero, List_level_init_zero}, false, Entity_init_zero}
#define Response_init_zero                       {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Field_value_str_val_tag                  1
#define Field_value_int_val_tag                  2
#define Field_value_bool_val_tag                 3
#define Field_value_real_val_tag                 4
#define Field_type_tag                           1
#define Field_name_tag                           2
#define Field_val_tag                            3
#define Entity_fields_tag                        1
#define Entity_rel_tag                           2
#define Condition_is_id_tag                      1
#define Condition_id_tag                         2
#define Condition_type_tag                       3
#define Condition_op_tag                         4
#define Condition_field_name_tag                 5
#define Condition_val_tag                        6
#define Filter_negative_tag                      1
#define Filter_conditions_tag                    2
#define List_level_filters_tag                   1
#define View_op_tag                              1
#define View_tree_tag                            2
#define View_entity_tag                          3
#define Response_is_last_tag                     1
#define Response_answer_tag                      2

/* Struct field encoding specification for nanopb */
#define Field_value_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, STRING,   str_val,           1) \
X(a, STATIC,   OPTIONAL, INT64,    int_val,           2) \
X(a, STATIC,   OPTIONAL, INT64,    bool_val,          3) \
X(a, STATIC,   OPTIONAL, DOUBLE,   real_val,          4)
#define Field_value_CALLBACK NULL
#define Field_value_DEFAULT NULL

#define Field_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   type,              1) \
X(a, STATIC,   REQUIRED, STRING,   name,              2) \
X(a, STATIC,   REQUIRED, MESSAGE,  val,               3)
#define Field_CALLBACK NULL
#define Field_DEFAULT NULL
#define Field_val_MSGTYPE Field_value

#define Entity_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  fields,            1) \
X(a, STATIC,   REPEATED, UINT64,   rel,               2)
#define Entity_CALLBACK NULL
#define Entity_DEFAULT NULL
#define Entity_fields_MSGTYPE Field

#define Condition_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   is_id,             1) \
X(a, STATIC,   REQUIRED, UINT64,   id,                2) \
X(a, STATIC,   REQUIRED, UINT32,   type,              3) \
X(a, STATIC,   REQUIRED, UINT32,   op,                4) \
X(a, STATIC,   REQUIRED, STRING,   field_name,        5) \
X(a, STATIC,   REQUIRED, MESSAGE,  val,               6)
#define Condition_CALLBACK NULL
#define Condition_DEFAULT NULL
#define Condition_val_MSGTYPE Field_value

#define Filter_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   negative,          1) \
X(a, STATIC,   REPEATED, MESSAGE,  conditions,        2)
#define Filter_CALLBACK NULL
#define Filter_DEFAULT NULL
#define Filter_conditions_MSGTYPE Condition

#define List_level_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  filters,           1)
#define List_level_CALLBACK NULL
#define List_level_DEFAULT NULL
#define List_level_filters_MSGTYPE Filter

#define View_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   op,                1) \
X(a, STATIC,   REPEATED, MESSAGE,  tree,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  entity,            3)
#define View_CALLBACK NULL
#define View_DEFAULT NULL
#define View_tree_MSGTYPE List_level
#define View_entity_MSGTYPE Entity

#define Response_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   is_last,           1) \
X(a, STATIC,   REQUIRED, STRING,   answer,            2)
#define Response_CALLBACK NULL
#define Response_DEFAULT NULL

extern const pb_msgdesc_t Field_value_msg;
extern const pb_msgdesc_t Field_msg;
extern const pb_msgdesc_t Entity_msg;
extern const pb_msgdesc_t Condition_msg;
extern const pb_msgdesc_t Filter_msg;
extern const pb_msgdesc_t List_level_msg;
extern const pb_msgdesc_t View_msg;
extern const pb_msgdesc_t Response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Field_value_fields &Field_value_msg
#define Field_fields &Field_msg
#define Entity_fields &Entity_msg
#define Condition_fields &Condition_msg
#define Filter_fields &Filter_msg
#define List_level_fields &List_level_msg
#define View_fields &View_msg
#define Response_fields &Response_msg

/* Maximum encoded size of messages (where known) */
#define Condition_size                           192
#define Entity_size                              3660
#define Field_size                               169
#define Field_value_size                         96
#define Filter_size                              3906
#define List_level_size                          78180
#define Response_size                            71
#define View_size                                1567349

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
